name: .NET CI

on:
  push:
    paths-ignore:
      - '**.md'
    tags:
      - 'v*'
  pull_request:

env:
  project_name: sizy

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    name: Build and test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.100'

    - name: Test
      run: dotnet test /p:CollectCoverage=true


  publish:
    needs: test
    name: Publish artifacts
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.100'

    - name: Publish debug artifact
      run: |
        export SHA=${GITHUB_SHA:0:7}
        dotnet publish -c Debug -o ./${{ env.project_name }}-dev-$SHA
        echo SHA=${GITHUB_SHA:0:7} >> $GITHUB_ENV

    - name: Upload debug artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: ${{ env.project_name }}-dev-${{ env.SHA }}
        path: ${{ env.project_name }}-dev-${{ env.SHA }}

    - name: Publish release artifacts
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        dotnet publish -c Release -r win-x64 --self-contained false -o ./${{ env.project_name }}-$VERSION-win
        dotnet publish -c Release -r linux-x64 --self-contained false -o ./${{ env.project_name }}-$VERSION-linux
        dotnet publish -c Release -r osx-x64 --self-contained false -o ./${{ env.project_name }}-$VERSION-osx
        dotnet publish -c Release -r win-x64 /p:PublishSingleFile=true -o ./${{ env.project_name }}-$VERSION-win-sc
        dotnet publish -c Release -r linux-x64 /p:PublishSingleFile=true -o ./${{ env.project_name }}-$VERSION-linux-sc
        dotnet publish -c Release -r osx-x64 /p:PublishSingleFile=true -o ./${{ env.project_name }}-$VERSION-osx-sc

        zip -r ${{ env.project_name }}-$VERSION-win.zip ${{ env.project_name }}-$VERSION-win
        zip -r ${{ env.project_name }}-$VERSION-linux.zip ${{ env.project_name }}-$VERSION-linux
        zip -r ${{ env.project_name }}-$VERSION-osx.zip ${{ env.project_name }}-$VERSION-osx
        zip -r ${{ env.project_name }}-$VERSION-win-sc.zip ${{ env.project_name }}-$VERSION-win-sc
        zip -r ${{ env.project_name }}-$VERSION-linux-sc.zip ${{ env.project_name }}-$VERSION-linux-sc
        zip -r ${{ env.project_name }}-$VERSION-osx-sc.zip ${{ env.project_name }}-$VERSION-osx-sc

    - name: Create draft release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        files: ./*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
